package com.weiguang.test;import com.weiguang.sephiroth.util.ByteUtil;import org.junit.Test;import javax.xml.soap.Detail;import java.io.UnsupportedEncodingException;import java.nio.ByteBuffer;import java.nio.ByteOrder;import java.util.Arrays;/** * Created by wWX313869 on 2017/1/9. */public class TestSize {    @Test    public void TestCount() throws UnsupportedEncodingException {        int length1 = Data1.array.length;        int length2 = Data2.array.length;        int length3 = Data3.array.length;        int total = length1 + length2 + length3;        System.out.println("1段：" + length1 + ",2段：" + length2 + ",3段：" + length3 + ",合计:" + total);        ByteBuffer buffer = ByteBuffer.allocate(total);        buffer.order(ByteOrder.LITTLE_ENDIAN);        buffer.put(Data1.array);        buffer.put(Data2.array);        buffer.put(Data3.array);        buffer.flip();        String name = ByteUtil.getString(buffer);        System.out.println("PlayerName:" + name);        String raceName = ByteUtil.getString(buffer);        OutString("RaceName", raceName);        byte sex = buffer.get();        System.out.println("Sex:" + (sex != 0 ? "男" : "女"));        String job = ByteUtil.getString(buffer);        OutString("JobName:", job);        System.out.println("UnknowInt:" + buffer.getInt());        System.out.println("UnknowByte:" + buffer.get());        System.out.println("Trible:" + ByteUtil.getString(buffer));        System.out.println("TribleDes:" + ByteUtil.getString(buffer));        System.out.println("Unknow:" + ByteUtil.getString(buffer));        System.out.println("Unknow:" + ByteUtil.getString(buffer));        System.out.println("Unknow:" + ByteUtil.getString(buffer));        System.out.println("HairColor:" + ByteUtil.getString(buffer));        System.out.println("Unknow:" + ByteUtil.getString(buffer));        System.out.println("BodyName:" + ByteUtil.getString(buffer));        System.out.println("Aligment:" + buffer.getInt());        System.out.println("UnknowByte:" + buffer.get());        System.out.println("UnknowByte:" + buffer.get());        System.out.println("UnknowByte:" + buffer.get());        System.out.println("CastleName:" + ByteUtil.getString(buffer));        System.out.println("Int:" + buffer.getInt());        System.out.println("等级:" + buffer.getInt());        System.out.println("Long:" + buffer.getLong());        System.out.println("Long:" + buffer.getLong());        System.out.println("Long:" + buffer.getLong());        System.out.println("Int:" + buffer.getInt());        System.out.println("Int:" + buffer.getInt());        System.out.println("Int:" + buffer.getInt());        System.out.println("Int:" + buffer.getInt());        System.out.println("Int:" + buffer.getInt());        System.out.println("Int:" + buffer.getInt());        System.out.println("Int:" + buffer.getInt());        System.out.println("Int:" + buffer.getInt());        System.out.println("Int:" + buffer.getInt());        System.out.println("Int:" + buffer.getInt());        System.out.println("Int:" + buffer.getInt());        System.out.println("Int:" + buffer.getInt());        System.out.println("Int:" + buffer.getInt());        System.out.println("Long:" + buffer.getLong());        for (int i = 0; i < 0x19; i++) {            byte hasEquip = buffer.get();            if (hasEquip == 1) {                WornItem(buffer);            }        }    }    public void OutString(String type, Object msg) {        System.out.println(type + ":" + msg);    }    @Test    public void TestWrapWornItem() throws UnsupportedEncodingException {        ByteBuffer buffer = ByteBuffer.wrap(WornItem1.array);        WornItem(buffer);        //WornItem(WornItem2.array);        //WornItem(WornItem3.array);    }    public void WornItem(ByteBuffer buffer) throws UnsupportedEncodingException {        buffer.order(ByteOrder.LITTLE_ENDIAN);        System.out.println("ModelName:" + ByteUtil.getString(buffer));        System.out.println("EquipPlace:" + buffer.getInt());        System.out.println("RaceType:" + buffer.get());        System.out.println("AttachMentModelName:" + ByteUtil.getString(buffer));        System.out.println("AttatchMentShowName:" + ByteUtil.getString(buffer));        System.out.println("ShowName:" + ByteUtil.getString(buffer));        System.out.println("LV desc:" + ByteUtil.getString(buffer));        System.out.println("Int:" + buffer.getInt());        System.out.println("Width:" + buffer.getInt());        System.out.println("Height:" + buffer.getInt());        System.out.println("TypeString:" + ByteUtil.getString(buffer));        System.out.println("TypeID:" + buffer.getInt());        System.out.println("Int:" + buffer.getInt());        System.out.println("耐久:" + buffer.getFloat() + "/" + buffer.getFloat());        System.out.println("Byte:" + buffer.get());        System.out.println("BuyPrice:" + buffer.getLong());        System.out.println("SellPrice:" + buffer.getLong());        buffer.position(buffer.position() + 9);        int intVla = buffer.getInt();        if (intVla != 0) {        }        byte type = buffer.get();        System.out.println("GearType>>>>>>>>>:" + type);        switch (type) {            case 5: {                System.out.println("TypeFloat:" + buffer.getFloat());                System.out.println("TypeString:" + ByteUtil.getString(buffer));                break;            }            case 4: {                for (int j = 0; j < 7; j++) {                    System.out.println("Int:" + buffer.getInt());                }                int count = 6;                do {                    System.out.println("Int:" + buffer.getInt());                    System.out.println("Int:" + buffer.getInt());                    count--;                } while (count >= 0);                break;            }            case 6: {                System.out.println("Float:" + buffer.getFloat());                System.out.println("Float:" + buffer.getFloat());                break;            }            default:                break;        }        byte boolVal = buffer.get();        if (boolVal != 0) {            System.out.println("Int:" + buffer.getInt());            System.out.println("Int:" + buffer.getInt());            System.out.println("Int:" + buffer.getInt());        }        byte needs = buffer.get();        for (int j = 0; j < needs; j++) {            System.out.println("需求:" + buffer.get() + "=" + buffer.getInt());        }        int al = buffer.getInt();        System.out.println("Int:" + al);        int bMultAttr = buffer.get();        System.out.println("Bool:" + bMultAttr);        if (bMultAttr == 0 && al > 0) {            System.out.println("AttrEffect:" + ByteUtil.getString(buffer));        }        byte attrs = buffer.get();        for (int j = 0; j < attrs; j++) {            System.out.println("AttrEffect" + j + ":" + ByteUtil.getString(buffer));            System.out.println("AttrEffectName:" + j + ":" + ByteUtil.getString(buffer));        }        System.out.println("====================================================");    }    public String stringToHexString(String strPart) {        String hexString = "";        for (int i = 0; i < strPart.length(); i++) {            int ch = (int) strPart.charAt(i);            String strHex = Integer.toHexString(ch).toUpperCase();            hexString = hexString + "0x" + strHex + ",";        }        return hexString;    }    @Test    public void TestTransString() throws UnsupportedEncodingException {        byte[] arrsy = "LifeSp".getBytes("GB2312");        System.out.println(Arrays.toString(arrsy));        System.out.println(stringToHexString("LifeSp"));    }}
